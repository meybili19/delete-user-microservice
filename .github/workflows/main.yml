name: Deploy to AWS

on:
  pull_request:
    branches:
      - main 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2

      - name: Login en Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Construir y subir imagen a Docker Hub
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/delete_user_microservice_image:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/delete_user_microservice_image:latest

      - name: Conectar a AWS EC2 y desplegar
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_M }}
          username: ${{ secrets.EC2_USER_M }}
          key: ${{ secrets.EC2_SSH_KEY_M }}
          script: |
            echo "ðŸš€ Iniciando despliegue en AWS EC2..."

            # Detener y eliminar el contenedor si ya existe
            if sudo docker ps -a --format '{{.Names}}' | grep -q delete_user_microservice_container; then
              echo "ðŸ›‘ Deteniendo y eliminando contenedor existente..."
              sudo docker stop delete_user_microservice_container
              sudo docker rm delete_user_microservice_container
            fi

            # Remover imÃ¡genes antiguas para evitar acumulaciÃ³n
            echo "ðŸ§¹ Limpiando imÃ¡genes antiguas..."
            sudo docker image prune -af || true

            # Descargar la Ãºltima versiÃ³n de la imagen desde Docker Hub
            echo "ðŸ“¥ Descargando nueva imagen..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/delete_user_microservice_image:latest

            # Ejecutar el nuevo contenedor con las variables de entorno
            echo "ðŸš€ Ejecutando nuevo contenedor..."
            sudo docker run -d --name delete_user_microservice_container \
              --env DB_USER=${{ secrets.DB_USER_M }} \
              --env DB_PASSWORD=${{ secrets.DB_PASSWORD_M }} \
              --env DB_SERVER=${{ secrets.DB_SERVER_M }} \
              --env DB_NAME=${{ secrets.DB_NAME_M }} \
              --env QUERY_MICROSERVICE_URL=${{ secrets.QUERY_MICROSERVICE_URL }} \
              -p 5003:5003 \
              ${{ secrets.DOCKER_USERNAME }}/delete_user_microservice_image:latest

            echo "âœ… Despliegue completado con Ã©xito."
